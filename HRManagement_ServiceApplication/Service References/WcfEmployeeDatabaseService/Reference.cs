//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HRManagement_ServiceApplication.WcfEmployeeDatabaseService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfEmployeeDatabaseService.IWcfEmployeeDatabaseService")]
    public interface IWcfEmployeeDatabaseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfEmployeeDatabaseService/InsertEmployeeAndAddresses", ReplyAction="http://tempuri.org/IWcfEmployeeDatabaseService/InsertEmployeeAndAddressesResponse" +
            "")]
        int InsertEmployeeAndAddresses(HRManagement_ServiceApplication_HRItems.Employee e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfEmployeeDatabaseService/InsertEmployeeAndAddresses", ReplyAction="http://tempuri.org/IWcfEmployeeDatabaseService/InsertEmployeeAndAddressesResponse" +
            "")]
        System.Threading.Tasks.Task<int> InsertEmployeeAndAddressesAsync(HRManagement_ServiceApplication_HRItems.Employee e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfEmployeeDatabaseService/InsertAddress", ReplyAction="http://tempuri.org/IWcfEmployeeDatabaseService/InsertAddressResponse")]
        int InsertAddress(HRManagement_ServiceApplication_HRItems.Address a, System.Guid employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfEmployeeDatabaseService/InsertAddress", ReplyAction="http://tempuri.org/IWcfEmployeeDatabaseService/InsertAddressResponse")]
        System.Threading.Tasks.Task<int> InsertAddressAsync(HRManagement_ServiceApplication_HRItems.Address a, System.Guid employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfEmployeeDatabaseService/ReadAllEmployees", ReplyAction="http://tempuri.org/IWcfEmployeeDatabaseService/ReadAllEmployeesResponse")]
        HRManagement_ServiceApplication_HRItems.Employee[] ReadAllEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfEmployeeDatabaseService/ReadAllEmployees", ReplyAction="http://tempuri.org/IWcfEmployeeDatabaseService/ReadAllEmployeesResponse")]
        System.Threading.Tasks.Task<HRManagement_ServiceApplication_HRItems.Employee[]> ReadAllEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfEmployeeDatabaseService/ReadAllAddresses", ReplyAction="http://tempuri.org/IWcfEmployeeDatabaseService/ReadAllAddressesResponse")]
        HRManagement_ServiceApplication_HRItems.Address[] ReadAllAddresses(HRManagement_ServiceApplication_HRItems.Employee e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfEmployeeDatabaseService/ReadAllAddresses", ReplyAction="http://tempuri.org/IWcfEmployeeDatabaseService/ReadAllAddressesResponse")]
        System.Threading.Tasks.Task<HRManagement_ServiceApplication_HRItems.Address[]> ReadAllAddressesAsync(HRManagement_ServiceApplication_HRItems.Employee e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfEmployeeDatabaseService/UpdateEmployeeAndAddresses", ReplyAction="http://tempuri.org/IWcfEmployeeDatabaseService/UpdateEmployeeAndAddressesResponse" +
            "")]
        int UpdateEmployeeAndAddresses(HRManagement_ServiceApplication_HRItems.Employee e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfEmployeeDatabaseService/UpdateEmployeeAndAddresses", ReplyAction="http://tempuri.org/IWcfEmployeeDatabaseService/UpdateEmployeeAndAddressesResponse" +
            "")]
        System.Threading.Tasks.Task<int> UpdateEmployeeAndAddressesAsync(HRManagement_ServiceApplication_HRItems.Employee e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfEmployeeDatabaseService/UpdateAddress", ReplyAction="http://tempuri.org/IWcfEmployeeDatabaseService/UpdateAddressResponse")]
        int UpdateAddress(HRManagement_ServiceApplication_HRItems.Address a, System.Guid employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfEmployeeDatabaseService/UpdateAddress", ReplyAction="http://tempuri.org/IWcfEmployeeDatabaseService/UpdateAddressResponse")]
        System.Threading.Tasks.Task<int> UpdateAddressAsync(HRManagement_ServiceApplication_HRItems.Address a, System.Guid employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfEmployeeDatabaseService/DeleteEmployee", ReplyAction="http://tempuri.org/IWcfEmployeeDatabaseService/DeleteEmployeeResponse")]
        int DeleteEmployee(HRManagement_ServiceApplication_HRItems.Employee e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfEmployeeDatabaseService/DeleteEmployee", ReplyAction="http://tempuri.org/IWcfEmployeeDatabaseService/DeleteEmployeeResponse")]
        System.Threading.Tasks.Task<int> DeleteEmployeeAsync(HRManagement_ServiceApplication_HRItems.Employee e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfEmployeeDatabaseService/DeleteAddress", ReplyAction="http://tempuri.org/IWcfEmployeeDatabaseService/DeleteAddressResponse")]
        int DeleteAddress(HRManagement_ServiceApplication_HRItems.Address a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfEmployeeDatabaseService/DeleteAddress", ReplyAction="http://tempuri.org/IWcfEmployeeDatabaseService/DeleteAddressResponse")]
        System.Threading.Tasks.Task<int> DeleteAddressAsync(HRManagement_ServiceApplication_HRItems.Address a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfEmployeeDatabaseService/DeleteAddressesOfEmployee", ReplyAction="http://tempuri.org/IWcfEmployeeDatabaseService/DeleteAddressesOfEmployeeResponse")]
        int DeleteAddressesOfEmployee(System.Guid employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfEmployeeDatabaseService/DeleteAddressesOfEmployee", ReplyAction="http://tempuri.org/IWcfEmployeeDatabaseService/DeleteAddressesOfEmployeeResponse")]
        System.Threading.Tasks.Task<int> DeleteAddressesOfEmployeeAsync(System.Guid employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfEmployeeDatabaseService/GetApplicationName", ReplyAction="http://tempuri.org/IWcfEmployeeDatabaseService/GetApplicationNameResponse")]
        string GetApplicationName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfEmployeeDatabaseService/GetApplicationName", ReplyAction="http://tempuri.org/IWcfEmployeeDatabaseService/GetApplicationNameResponse")]
        System.Threading.Tasks.Task<string> GetApplicationNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfEmployeeDatabaseService/CheckDatabaseAvailability", ReplyAction="http://tempuri.org/IWcfEmployeeDatabaseService/CheckDatabaseAvailabilityResponse")]
        bool CheckDatabaseAvailability();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfEmployeeDatabaseService/CheckDatabaseAvailability", ReplyAction="http://tempuri.org/IWcfEmployeeDatabaseService/CheckDatabaseAvailabilityResponse")]
        System.Threading.Tasks.Task<bool> CheckDatabaseAvailabilityAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfEmployeeDatabaseServiceChannel : HRManagement_ServiceApplication.WcfEmployeeDatabaseService.IWcfEmployeeDatabaseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WcfEmployeeDatabaseServiceClient : System.ServiceModel.ClientBase<HRManagement_ServiceApplication.WcfEmployeeDatabaseService.IWcfEmployeeDatabaseService>, HRManagement_ServiceApplication.WcfEmployeeDatabaseService.IWcfEmployeeDatabaseService {
        
        public WcfEmployeeDatabaseServiceClient() {
        }
        
        public WcfEmployeeDatabaseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WcfEmployeeDatabaseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfEmployeeDatabaseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfEmployeeDatabaseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int InsertEmployeeAndAddresses(HRManagement_ServiceApplication_HRItems.Employee e) {
            return base.Channel.InsertEmployeeAndAddresses(e);
        }
        
        public System.Threading.Tasks.Task<int> InsertEmployeeAndAddressesAsync(HRManagement_ServiceApplication_HRItems.Employee e) {
            return base.Channel.InsertEmployeeAndAddressesAsync(e);
        }
        
        public int InsertAddress(HRManagement_ServiceApplication_HRItems.Address a, System.Guid employeeId) {
            return base.Channel.InsertAddress(a, employeeId);
        }
        
        public System.Threading.Tasks.Task<int> InsertAddressAsync(HRManagement_ServiceApplication_HRItems.Address a, System.Guid employeeId) {
            return base.Channel.InsertAddressAsync(a, employeeId);
        }
        
        public HRManagement_ServiceApplication_HRItems.Employee[] ReadAllEmployees() {
            return base.Channel.ReadAllEmployees();
        }
        
        public System.Threading.Tasks.Task<HRManagement_ServiceApplication_HRItems.Employee[]> ReadAllEmployeesAsync() {
            return base.Channel.ReadAllEmployeesAsync();
        }
        
        public HRManagement_ServiceApplication_HRItems.Address[] ReadAllAddresses(HRManagement_ServiceApplication_HRItems.Employee e) {
            return base.Channel.ReadAllAddresses(e);
        }
        
        public System.Threading.Tasks.Task<HRManagement_ServiceApplication_HRItems.Address[]> ReadAllAddressesAsync(HRManagement_ServiceApplication_HRItems.Employee e) {
            return base.Channel.ReadAllAddressesAsync(e);
        }
        
        public int UpdateEmployeeAndAddresses(HRManagement_ServiceApplication_HRItems.Employee e) {
            return base.Channel.UpdateEmployeeAndAddresses(e);
        }
        
        public System.Threading.Tasks.Task<int> UpdateEmployeeAndAddressesAsync(HRManagement_ServiceApplication_HRItems.Employee e) {
            return base.Channel.UpdateEmployeeAndAddressesAsync(e);
        }
        
        public int UpdateAddress(HRManagement_ServiceApplication_HRItems.Address a, System.Guid employeeId) {
            return base.Channel.UpdateAddress(a, employeeId);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAddressAsync(HRManagement_ServiceApplication_HRItems.Address a, System.Guid employeeId) {
            return base.Channel.UpdateAddressAsync(a, employeeId);
        }
        
        public int DeleteEmployee(HRManagement_ServiceApplication_HRItems.Employee e) {
            return base.Channel.DeleteEmployee(e);
        }
        
        public System.Threading.Tasks.Task<int> DeleteEmployeeAsync(HRManagement_ServiceApplication_HRItems.Employee e) {
            return base.Channel.DeleteEmployeeAsync(e);
        }
        
        public int DeleteAddress(HRManagement_ServiceApplication_HRItems.Address a) {
            return base.Channel.DeleteAddress(a);
        }
        
        public System.Threading.Tasks.Task<int> DeleteAddressAsync(HRManagement_ServiceApplication_HRItems.Address a) {
            return base.Channel.DeleteAddressAsync(a);
        }
        
        public int DeleteAddressesOfEmployee(System.Guid employeeId) {
            return base.Channel.DeleteAddressesOfEmployee(employeeId);
        }
        
        public System.Threading.Tasks.Task<int> DeleteAddressesOfEmployeeAsync(System.Guid employeeId) {
            return base.Channel.DeleteAddressesOfEmployeeAsync(employeeId);
        }
        
        public string GetApplicationName() {
            return base.Channel.GetApplicationName();
        }
        
        public System.Threading.Tasks.Task<string> GetApplicationNameAsync() {
            return base.Channel.GetApplicationNameAsync();
        }
        
        public bool CheckDatabaseAvailability() {
            return base.Channel.CheckDatabaseAvailability();
        }
        
        public System.Threading.Tasks.Task<bool> CheckDatabaseAvailabilityAsync() {
            return base.Channel.CheckDatabaseAvailabilityAsync();
        }
    }
}
